{"version":3,"sources":["components/layout/header/navButton/NavButton.tsx","components/layout/header/links/Links.tsx","components/layout/header/root/Header.tsx","components/routes/home/Home.tsx","components/shared/input/Input.tsx","components/shared/image/Image.tsx","components/routes/search/card/Card.tsx","queries/characterById.ts","hooks/useFetch.ts","components/routes/search/root/Search.tsx","components/routes/gallery/testImages/testImages.ts","components/routes/gallery/testImages/TestImages.tsx","components/routes/gallery/root/Gallery.tsx","components/routes/notFound/NotFound.tsx","components/router/Router.tsx","components/layout/main/Main.tsx","components/layout/footer/Footer.tsx","components/app/App.tsx","index.tsx"],"names":["NavButton","onClick","collapsed","className","Links","exact","to","activeClassName","Header","useState","isCollapsed","setIsCollapsed","Home","href","title","Input","label","type","value","onChange","onSubmit","inputId","toLowerCase","htmlFor","id","e","currentTarget","event","preventDefault","Image","src","target","rel","key","alt","Card","isLoading","data","error","content","character","name","species","status","origin","image","render","getQuery","useFetch","setIsLoading","setData","setError","fetchData","useCallback","a","async","options","method","headers","body","JSON","stringify","query","fetch","then","res","json","response","Error","message","Search","setId","images","TestImages","buttons","map","imgLink","index","onDoubleClick","Gallery","setImages","imageLink","setImageLink","addImageToGallery","url","gallery","getImagesToShow","ErrorPage","Router","path","Main","Footer","App","style","display","flexDirection","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e544a895.chunk.js","sourcesContent":["import React from 'react';\nimport './NavButton.scss';\n\nconst NavButton = ({\n  onClick,\n  collapsed\n}: {\n  onClick: () => void;\n  collapsed: boolean;\n}) => (\n  <button className={!collapsed ? 'button opened' : 'button'} onClick={onClick}>\n    <div className=\"nav-button\"></div>\n  </button>\n);\n\nexport default NavButton;\n","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nconst Links = () => (\n  <div>\n    <Link exact to=\"/\" activeClassName=\"active\">\n      Home\n    </Link>\n    <Link exact to=\"search\" activeClassName=\"active\">\n      Search\n    </Link>\n    <Link exact to=\"gallery\" activeClassName=\"active\">\n      Gallery\n    </Link>\n  </div>\n);\n\nexport default Links;\n","import React, { useState } from 'react';\nimport './Header.scss';\nimport NavButton from '../navButton';\nimport Links from '../links';\n\nconst Header = () => {\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const onClick = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  return (\n    <header>\n      <div className=\"container\">\n        <nav>\n          <Links />\n          <div className=\"nav-mobile\">\n            <NavButton onClick={onClick} collapsed={isCollapsed} />\n            {!isCollapsed && (\n              <div className=\"mobile-menu\" onClick={onClick}>\n                <Links />\n              </div>\n            )}\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.scss';\n\nconst Home = () => (\n  <div className=\"container\">\n    <div className=\"main-header\">Home</div>\n    <article className=\"description\">\n      <p>\n        This is a simple, mobile-friendly demo{' '}\n        <a href=\"https://github.com/lu4ezar/search_view\">app</a> written in{' '}\n        <a href=\"https://www.typescriptlang.org/\">TypeScript</a>. It was\n        bootstrapped with{' '}\n        <a href=\"https://github.com/facebook/create-react-app\">\n          Create React App\n        </a>\n        . <a href=\"https://sass-lang.com/\">SCSS</a> was used for styling.\n        Navigation was implemented with{' '}\n        <a href=\"https://github.com/ReactTraining/react-router\">React Router</a>\n        . No state management tools were involved, just{' '}\n        <a href=\"https://reactjs.org/docs/hooks-reference.html#usestate\">\n          useState\n        </a>{' '}\n        hook. The app consists of 2 parts:\n      </p>\n      <ul>\n        <li>\n          <Link to=\"/search\">\n            <h3>part I . search </h3>\n          </Link>\n          <p>\n            <em>\n              Enter id <span>(int, [1..493])</span>, hit 'ok' and get card with\n              one of \"Rick and Morty\"'s character. Find your favorite one!\n            </em>\n          </p>\n          <p>\n            All the data comes from{' '}\n            <a href=\"https://rickandmortyapi.com/\">Rick and Morty API</a> via{' '}\n            <a href=\"https://graphql.org/\">GraphQl</a> query. No library was\n            used, bare manual{' '}\n            <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">\n              fetch\n            </a>{' '}\n            call from custom <span title=\"src/hooks/useFetch.ts\">useFetch</span>{' '}\n            hook. It handles <em>loading</em> and <em>error</em> states and uses{' '}\n            <em>async/await</em> syntax. Types were auto-generated with{' '}\n            <a href=\"https://www.npmjs.com/package/@graphql-codegen/cli\">\n              @graphql-codegen/cli\n            </a>\n            .\n          </p>\n        </li>\n        <li>\n          <Link to=\"/gallery\">\n            <h3>part II . gallery</h3>\n          </Link>\n          <p>\n            <em>Get some image urls and create your own gallery.</em>\n          </p>\n          <p>\n            Also, you can use buttons placed below input to get hardcoded urls\n            of hi-res images from{' '}\n            <a href=\"https://unsplash.com\">unsplash.com</a>. Click button once\n            to insert link into input and submit it manually. Double-click will\n            auto-submit image. Gallery layout was made with{' '}\n            <code>\n              display: grid;\n              <br />\n              grid-template-areas: 'img img img';\n            </code>\n          </p>\n        </li>\n      </ul>\n    </article>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport './Input.scss';\n\ntype InputProps = {\n  label: string;\n  type: string;\n  value: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n};\n\nconst Input = ({ label, type, value, onChange, onSubmit }: InputProps) => {\n  const inputId = label.toLowerCase();\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onChange(value);\n  };\n  const submitForm = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    if (value === '') {\n      return;\n    }\n    onSubmit(value);\n  };\n  return (\n    <div className=\"input\">\n      <form>\n        <label htmlFor={inputId}>{label}</label>\n        <input id={inputId} type={type} value={value} onChange={handleChange} />\n        <input type=\"submit\" value=\"Ok\" onClick={submitForm} />\n      </form>\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Image.scss';\n\nconst Image = ({ src }: { src: string }) => (\n  <div className=\"img-outer\">\n    <a\n      href={src}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      title=\"view full image\"\n    >\n      <img key={src} className=\"img\" src={src} alt=\"\" />\n    </a>\n  </div>\n);\n\nexport default Image;\n","import React from 'react';\nimport Image from '../../../shared/image';\nimport './Card.scss';\nimport { UseFetch } from '../../../../types/UseFetch';\nimport { Character, Query } from '../../../../types';\n\nconst Card = ({ isLoading, data, error }: UseFetch) => {\n  const render = () => {\n    switch (true) {\n      case !!error:\n        return <div>{error}</div>;\n      case isLoading:\n        return <div>Loading...</div>;\n      case data != null:\n        const { name, species, status, origin, image } = (data as Query)\n          .character as Character;\n        return (\n          <div className=\"card\">\n            <Image src={image as string} />\n            <div className=\"info\">\n              <h4>{name}</h4>\n              <p>\n                <span>Species: </span>\n                {species}\n              </p>\n              <p>\n                <span>Status: </span>\n                {status}\n              </p>\n              <p>\n                <span>Origin: </span>\n                {origin?.name}\n              </p>\n            </div>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n  const content = render();\n  return <div className=\"card-outer\">{content}</div>;\n};\n\nexport default Card;\n","export const getQuery = (id = '0') => `\n\t{\n\t\tcharacter(id: ${id}) {\n\t\t\tname\n\t\t\tspecies\n\t\t\tstatus\n\t\t\torigin {\n\t\t\t\tname\n\t\t\t}\n\t\t\timage\n\t\t}\n\t}\n`;\n","import { useState, useCallback } from 'react';\nimport { getQuery } from '../queries/characterById';\nimport { FetchData } from '../types/UseFetch';\n\nconst useFetch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData: FetchData = useCallback(\n    async id => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const url = 'https://rickandmortyapi.com/graphql';\n        const options = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query: getQuery(id)\n          })\n        };\n        const response = await fetch(url, options).then(res => res.json());\n        if (response['errors']) {\n          throw new Error('GraphQL Error');\n        }\n        setData(response['data']);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n      return { isLoading, data, error };\n    },\n    [data, error, isLoading]\n  );\n  return [{ isLoading, data, error }, fetchData];\n};\n\nexport default useFetch;\n","import React, { useState } from 'react';\nimport Input from '../../../shared/input';\nimport Card from '../card';\nimport useFetch from '../../../../hooks/useFetch';\nimport { UseFetch, FetchData } from '../../../../types/UseFetch';\n\nconst Search = () => {\n  const [id, setId] = useState('');\n\n  const [data, fetchData] = useFetch();\n\n  const onSubmit = () => {\n    (fetchData as FetchData)(id);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"main-header\">Search</div>\n      <Input\n        label=\"character id:\"\n        value={id}\n        type=\"text\"\n        onChange={setId}\n        onSubmit={onSubmit}\n      />\n      <Card {...(data as UseFetch)} />\n    </div>\n  );\n};\n\nexport default Search;\n","export const images = [\n  'https://images.unsplash.com/photo-1565234329639-27fd21c04edb',\n  'https://images.unsplash.com/photo-1554171275-74ed5cb916cc',\n  'https://images.unsplash.com/photo-1575367725486-4183db79e018',\n  'https://images.unsplash.com/photo-1543637942-8127d74e9d3d',\n  'https://images.unsplash.com/photo-1516908205727-40afad9449a8',\n  'https://images.unsplash.com/photo-1518365658347-c4906efc5636',\n  'https://images.unsplash.com/photo-1540155993474-052b670771fc',\n  'https://images.unsplash.com/photo-1507150080056-79542bdb9c59',\n  'https://images.unsplash.com/photo-1421977870504-378093748ae6',\n  'https://images.unsplash.com/photo-1455889267303-a5ec970d6d43',\n  'https://images.unsplash.com/photo-1522871631682-a54fc957080e'\n];\n","import React from 'react';\nimport { images } from './testImages';\nimport './TestImages.scss';\n\ntype TestImages = {\n  onClick: (value: string) => void;\n  onSubmit: (value: string) => void;\n};\n\nconst TestImages = ({ onClick, onSubmit }: TestImages) => {\n  const buttons = images.map((imgLink, index) => (\n    <button\n      key={index}\n      className=\"test-img-btn\"\n      onClick={() => onClick(imgLink)}\n      onDoubleClick={() => onSubmit(imgLink)}\n      title=\"click to set image link, double click to auto-submit\"\n    >{`#${index + 1}`}</button>\n  ));\n  return <div className=\"test-images\">{buttons}</div>;\n};\n\nexport default TestImages;\n","import React, { useState } from 'react';\nimport Input from '../../../shared/input';\nimport Image from '../../../shared/image';\nimport './Gallery.scss';\nimport TestImages from '../testImages';\n\nconst getImagesToShow = (images: string[]) =>\n  images.map(image => <Image key={image} src={image} />);\n\nconst Gallery = () => {\n  const [images, setImages] = useState([] as string[]);\n  const [imageLink, setImageLink] = useState('');\n  const addImageToGallery = (url: string) => {\n    if (!url) return;\n    setImages([url, ...images]);\n    setImageLink('');\n  };\n  const gallery = getImagesToShow(images);\n  return (\n    <div className=\"container\">\n      <div className=\"main-header\">Gallery</div>\n      <Input\n        label=\"Picture URL:\"\n        type=\"url\"\n        value={imageLink}\n        onChange={setImageLink}\n        onSubmit={addImageToGallery}\n      />\n      <TestImages onClick={setImageLink} onSubmit={addImageToGallery} />\n      <div className=\"gallery\">{gallery}</div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NotFound.scss';\n\nconst ErrorPage = () => (\n  <div className=\"container not-found\">\n    <div>Not Found</div>\n    <div className=\"home-link\">\n      <Link to=\"/\">Back to Homepage</Link>\n    </div>\n  </div>\n);\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../routes/home';\nimport Search from '../routes/search/root';\nimport Gallery from '../routes/gallery/root';\nimport NotFound from '../routes/notFound';\n\nconst Router = () => (\n  <Switch>\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n    <Route path=\"/search\">\n      <Search />\n    </Route>\n    <Route path=\"/gallery\">\n      <Gallery />\n    </Route>\n    <Route>\n      <NotFound />\n    </Route>\n  </Switch>\n);\n\nexport default Router;\n","import React from 'react';\nimport Router from '../../router';\nimport './Main.scss';\n\nconst Main = () => (\n  <main>\n    <Router />\n  </main>\n);\n\nexport default Main;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => (\n  <footer>\n    <a\n      title=\"open project's github page in new tab\"\n      href=\"https://github.com/lu4ezar/search_view\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      https://github.com/lu4ezar\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../layout/header/root';\nimport Main from '../layout/main';\nimport Footer from '../layout/footer';\n\nconst App: React.FC = () => (\n  <div style={{ display: 'flex', flexDirection: 'column' }}>\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport App from './components/app';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}